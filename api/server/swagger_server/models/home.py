# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.flat_footprint import FlatFootprint  # noqa: F401,E501
from swagger_server.models.particle import Particle  # noqa: F401,E501
from swagger_server.models.physical_address import PhysicalAddress  # noqa: F401,E501
from swagger_server.models.purchase import Purchase  # noqa: F401,E501
from swagger_server import util


class Home(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, home_id: int=None, home_address: PhysicalAddress=None, home_description: str=None, purchase: Purchase=None, particles: List[Particle]=None, number_of_storeys: int=None, date_of_build: str=None, foundation_type: str=None, cladding_type: str=None, roof_type: str=None, main_dwelling_footprint: FlatFootprint=None, total_land_footprint: FlatFootprint=None):  # noqa: E501
        """Home - a model defined in Swagger

        :param home_id: The home_id of this Home.  # noqa: E501
        :type home_id: int
        :param home_address: The home_address of this Home.  # noqa: E501
        :type home_address: PhysicalAddress
        :param home_description: The home_description of this Home.  # noqa: E501
        :type home_description: str
        :param purchase: The purchase of this Home.  # noqa: E501
        :type purchase: Purchase
        :param particles: The particles of this Home.  # noqa: E501
        :type particles: List[Particle]
        :param number_of_storeys: The number_of_storeys of this Home.  # noqa: E501
        :type number_of_storeys: int
        :param date_of_build: The date_of_build of this Home.  # noqa: E501
        :type date_of_build: str
        :param foundation_type: The foundation_type of this Home.  # noqa: E501
        :type foundation_type: str
        :param cladding_type: The cladding_type of this Home.  # noqa: E501
        :type cladding_type: str
        :param roof_type: The roof_type of this Home.  # noqa: E501
        :type roof_type: str
        :param main_dwelling_footprint: The main_dwelling_footprint of this Home.  # noqa: E501
        :type main_dwelling_footprint: FlatFootprint
        :param total_land_footprint: The total_land_footprint of this Home.  # noqa: E501
        :type total_land_footprint: FlatFootprint
        """
        self.swagger_types = {
            'home_id': int,
            'home_address': PhysicalAddress,
            'home_description': str,
            'purchase': Purchase,
            'particles': List[Particle],
            'number_of_storeys': int,
            'date_of_build': str,
            'foundation_type': str,
            'cladding_type': str,
            'roof_type': str,
            'main_dwelling_footprint': FlatFootprint,
            'total_land_footprint': FlatFootprint
        }

        self.attribute_map = {
            'home_id': 'homeId',
            'home_address': 'homeAddress',
            'home_description': 'homeDescription',
            'purchase': 'purchase',
            'particles': 'particles',
            'number_of_storeys': 'numberOfStoreys',
            'date_of_build': 'dateOfBuild',
            'foundation_type': 'foundationType',
            'cladding_type': 'claddingType',
            'roof_type': 'roofType',
            'main_dwelling_footprint': 'mainDwellingFootprint',
            'total_land_footprint': 'totalLandFootprint'
        }
        self._home_id = home_id
        self._home_address = home_address
        self._home_description = home_description
        self._purchase = purchase
        self._particles = particles
        self._number_of_storeys = number_of_storeys
        self._date_of_build = date_of_build
        self._foundation_type = foundation_type
        self._cladding_type = cladding_type
        self._roof_type = roof_type
        self._main_dwelling_footprint = main_dwelling_footprint
        self._total_land_footprint = total_land_footprint

    @classmethod
    def from_dict(cls, dikt) -> 'Home':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The home of this Home.  # noqa: E501
        :rtype: Home
        """
        return util.deserialize_model(dikt, cls)

    @property
    def home_id(self) -> int:
        """Gets the home_id of this Home.

        The unique identifier of the home that is the subject of this application instance  # noqa: E501

        :return: The home_id of this Home.
        :rtype: int
        """
        return self._home_id

    @home_id.setter
    def home_id(self, home_id: int):
        """Sets the home_id of this Home.

        The unique identifier of the home that is the subject of this application instance  # noqa: E501

        :param home_id: The home_id of this Home.
        :type home_id: int
        """

        self._home_id = home_id

    @property
    def home_address(self) -> PhysicalAddress:
        """Gets the home_address of this Home.


        :return: The home_address of this Home.
        :rtype: PhysicalAddress
        """
        return self._home_address

    @home_address.setter
    def home_address(self, home_address: PhysicalAddress):
        """Sets the home_address of this Home.


        :param home_address: The home_address of this Home.
        :type home_address: PhysicalAddress
        """

        self._home_address = home_address

    @property
    def home_description(self) -> str:
        """Gets the home_description of this Home.

        A full enough description of the home, provided by the homeowner, to demonstrate the pride with which the homeowner considers her (or his) home.  # noqa: E501

        :return: The home_description of this Home.
        :rtype: str
        """
        return self._home_description

    @home_description.setter
    def home_description(self, home_description: str):
        """Sets the home_description of this Home.

        A full enough description of the home, provided by the homeowner, to demonstrate the pride with which the homeowner considers her (or his) home.  # noqa: E501

        :param home_description: The home_description of this Home.
        :type home_description: str
        """

        self._home_description = home_description

    @property
    def purchase(self) -> Purchase:
        """Gets the purchase of this Home.


        :return: The purchase of this Home.
        :rtype: Purchase
        """
        return self._purchase

    @purchase.setter
    def purchase(self, purchase: Purchase):
        """Sets the purchase of this Home.


        :param purchase: The purchase of this Home.
        :type purchase: Purchase
        """

        self._purchase = purchase

    @property
    def particles(self) -> List[Particle]:
        """Gets the particles of this Home.


        :return: The particles of this Home.
        :rtype: List[Particle]
        """
        return self._particles

    @particles.setter
    def particles(self, particles: List[Particle]):
        """Sets the particles of this Home.


        :param particles: The particles of this Home.
        :type particles: List[Particle]
        """

        self._particles = particles

    @property
    def number_of_storeys(self) -> int:
        """Gets the number_of_storeys of this Home.


        :return: The number_of_storeys of this Home.
        :rtype: int
        """
        return self._number_of_storeys

    @number_of_storeys.setter
    def number_of_storeys(self, number_of_storeys: int):
        """Sets the number_of_storeys of this Home.


        :param number_of_storeys: The number_of_storeys of this Home.
        :type number_of_storeys: int
        """

        self._number_of_storeys = number_of_storeys

    @property
    def date_of_build(self) -> str:
        """Gets the date_of_build of this Home.

        The approximate date on which the house was first built (not counting renovations)  # noqa: E501

        :return: The date_of_build of this Home.
        :rtype: str
        """
        return self._date_of_build

    @date_of_build.setter
    def date_of_build(self, date_of_build: str):
        """Sets the date_of_build of this Home.

        The approximate date on which the house was first built (not counting renovations)  # noqa: E501

        :param date_of_build: The date_of_build of this Home.
        :type date_of_build: str
        """

        self._date_of_build = date_of_build

    @property
    def foundation_type(self) -> str:
        """Gets the foundation_type of this Home.

        the type of foundations that underpin the structure  # noqa: E501

        :return: The foundation_type of this Home.
        :rtype: str
        """
        return self._foundation_type

    @foundation_type.setter
    def foundation_type(self, foundation_type: str):
        """Sets the foundation_type of this Home.

        the type of foundations that underpin the structure  # noqa: E501

        :param foundation_type: The foundation_type of this Home.
        :type foundation_type: str
        """

        self._foundation_type = foundation_type

    @property
    def cladding_type(self) -> str:
        """Gets the cladding_type of this Home.

        The material used to clad the exterior of the house  # noqa: E501

        :return: The cladding_type of this Home.
        :rtype: str
        """
        return self._cladding_type

    @cladding_type.setter
    def cladding_type(self, cladding_type: str):
        """Sets the cladding_type of this Home.

        The material used to clad the exterior of the house  # noqa: E501

        :param cladding_type: The cladding_type of this Home.
        :type cladding_type: str
        """

        self._cladding_type = cladding_type

    @property
    def roof_type(self) -> str:
        """Gets the roof_type of this Home.

        The material used to make the roof  # noqa: E501

        :return: The roof_type of this Home.
        :rtype: str
        """
        return self._roof_type

    @roof_type.setter
    def roof_type(self, roof_type: str):
        """Sets the roof_type of this Home.

        The material used to make the roof  # noqa: E501

        :param roof_type: The roof_type of this Home.
        :type roof_type: str
        """

        self._roof_type = roof_type

    @property
    def main_dwelling_footprint(self) -> FlatFootprint:
        """Gets the main_dwelling_footprint of this Home.


        :return: The main_dwelling_footprint of this Home.
        :rtype: FlatFootprint
        """
        return self._main_dwelling_footprint

    @main_dwelling_footprint.setter
    def main_dwelling_footprint(self, main_dwelling_footprint: FlatFootprint):
        """Sets the main_dwelling_footprint of this Home.


        :param main_dwelling_footprint: The main_dwelling_footprint of this Home.
        :type main_dwelling_footprint: FlatFootprint
        """

        self._main_dwelling_footprint = main_dwelling_footprint

    @property
    def total_land_footprint(self) -> FlatFootprint:
        """Gets the total_land_footprint of this Home.


        :return: The total_land_footprint of this Home.
        :rtype: FlatFootprint
        """
        return self._total_land_footprint

    @total_land_footprint.setter
    def total_land_footprint(self, total_land_footprint: FlatFootprint):
        """Sets the total_land_footprint of this Home.


        :param total_land_footprint: The total_land_footprint of this Home.
        :type total_land_footprint: FlatFootprint
        """

        self._total_land_footprint = total_land_footprint
