# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.particle_footprint import ParticleFootprint  # noqa: F401,E501
from swagger_server.models.particle_type import ParticleType  # noqa: F401,E501
from swagger_server import util


class Particle(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, particle_type: ParticleType=None, particle_name: str=None, particle_footprint: ParticleFootprint=None):  # noqa: E501
        """Particle - a model defined in Swagger

        :param particle_type: The particle_type of this Particle.  # noqa: E501
        :type particle_type: ParticleType
        :param particle_name: The particle_name of this Particle.  # noqa: E501
        :type particle_name: str
        :param particle_footprint: The particle_footprint of this Particle.  # noqa: E501
        :type particle_footprint: ParticleFootprint
        """
        self.swagger_types = {
            'particle_type': ParticleType,
            'particle_name': str,
            'particle_footprint': ParticleFootprint
        }

        self.attribute_map = {
            'particle_type': 'particleType',
            'particle_name': 'particleName',
            'particle_footprint': 'particleFootprint'
        }
        self._particle_type = particle_type
        self._particle_name = particle_name
        self._particle_footprint = particle_footprint

    @classmethod
    def from_dict(cls, dikt) -> 'Particle':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The particle of this Particle.  # noqa: E501
        :rtype: Particle
        """
        return util.deserialize_model(dikt, cls)

    @property
    def particle_type(self) -> ParticleType:
        """Gets the particle_type of this Particle.


        :return: The particle_type of this Particle.
        :rtype: ParticleType
        """
        return self._particle_type

    @particle_type.setter
    def particle_type(self, particle_type: ParticleType):
        """Sets the particle_type of this Particle.


        :param particle_type: The particle_type of this Particle.
        :type particle_type: ParticleType
        """

        self._particle_type = particle_type

    @property
    def particle_name(self) -> str:
        """Gets the particle_name of this Particle.

        What people usually refer to the particle as  # noqa: E501

        :return: The particle_name of this Particle.
        :rtype: str
        """
        return self._particle_name

    @particle_name.setter
    def particle_name(self, particle_name: str):
        """Sets the particle_name of this Particle.

        What people usually refer to the particle as  # noqa: E501

        :param particle_name: The particle_name of this Particle.
        :type particle_name: str
        """

        self._particle_name = particle_name

    @property
    def particle_footprint(self) -> ParticleFootprint:
        """Gets the particle_footprint of this Particle.


        :return: The particle_footprint of this Particle.
        :rtype: ParticleFootprint
        """
        return self._particle_footprint

    @particle_footprint.setter
    def particle_footprint(self, particle_footprint: ParticleFootprint):
        """Sets the particle_footprint of this Particle.


        :param particle_footprint: The particle_footprint of this Particle.
        :type particle_footprint: ParticleFootprint
        """

        self._particle_footprint = particle_footprint
